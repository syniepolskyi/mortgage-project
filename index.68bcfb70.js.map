{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["let banks = [\n  // {\n  //   id: \"435tr34wrt\",\n  //   name: \"Mono\",\n  //   interestRate: 5,\n  //   maxLoan: 500000,\n  //   minPayment: 1000,\n  //   loanTerm: 12,\n  // },\n  // {\n  //   id: \"asdfw342rew5\",\n  //   name: \"Privat\",\n  //   interestRate: 7,\n  //   maxLoan: 1000000,\n  //   minPayment: 5000,\n  //   loanTerm: 50,\n  // },\n];\n\nconst root = document.getElementById('root');\nconst banksContainer = document.createElement('div');\nconst loanInfoContainer = document.createElement('div');\nconst modalRef = document.getElementById('modal');\n\nbanksContainer.classList.add('banks-container');\nloanInfoContainer.classList.add('loan-info-container');\n\nroot.append(banksContainer, loanInfoContainer);\n\nconst addButton = document.createElement('button');\nconst listOfBank = document.createElement('ul');\n\naddButton.classList.add('create-bank-btn');\naddButton.textContent = 'Додати';\nconst cleanButton = document.createElement('button');\ncleanButton.classList.add('remove-all-banks-btn');\ncleanButton.textContent = 'Очистити';\nif (banks.length > 2) {\n  banksContainer.append(listOfBank, addButton, cleanButton);\n} else {\n  banksContainer.append(listOfBank, addButton);\n}\n\nfunction renderList() {\n  const itemOfBank = banks\n    .map((bank, index) => {\n      return `<li class=\"bank-item bank-item-container\" data-id = \"${bank.id}\"> \n              <span class=\"span-bank-id\">${index + 1}</span>\n              <span class=\"span-bank-name\">${bank.name}</span>\n              <button class=\"edit-bank-btn\"><i class=\"fa-solid fa-pencil\"></i></button>\n              <button class=\"remove-bank-btn\"><i class=\"fa-solid fa-xmark\"></i></button>\n          </li>`;\n    })\n    .join('');\n  listOfBank.innerHTML = itemOfBank;\n\n  document\n    .querySelectorAll(`.edit-bank-btn`)\n    .forEach(e => e.addEventListener(`click`, onEditClick));\n}\n\nrenderList();\n\nfunction renderModalMarkup() {\n  return `\n  <div class=\"backdrop\" data-modal>\n  <form class=\"form-backdrop\">\n    <button type=\"button\" class=\"close\" data-modal-close>\n      <i class=\"fa-solid fa-xmark\"></i>\n    </button>\n    <h3 class=\"form-title\">New bank</h3>\n    <div class=\"form-container\">\n      <div class=\"form-group\">\n        <label for=\"name\">name</label>\n        <input type=\"text\" name = \"name\" id=\"name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"maxLoan\">Mortgage size, $: </label>\n        <input type=\"text\" name = \"maxLoan\" id=\"maxLoan\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"minPayment\">Minimum down payment, $: </label>\n        <input type=\"text\" name=\"minPayment\" id=\"minPayment\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"loanTerm\">Loan period, month: </label>\n        <input type=\"text\" name=\"loanTerm\" id=\"loanTerm\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"interestRate\">Invest rate, %: </label>\n        <input type=\"text\" name =\"interestRate\" id=\"interestRate\">\n      </div>\n      <div class=\"form-group submit-container\">\n        <button type=\"submit\" class=\"submit-btn\">Зберегти</button>\n      </div>\n    </div>\n  </form>\n</div>\n`;\n}\n\nconst bankNames = document.querySelectorAll('.bank-item-container');\n\nfunction onClearActives() {\n  const activeItems = document.querySelectorAll(\n    '.bank-item-container.bank-item-active'\n  );\n  activeItems.forEach(e => e.classList.remove('bank-item-active'));\n}\n\nfunction renderInfoMarkUp(bank) {\n  const bankInfoItem = ` \n    <ul >\n    <li class=\"loan-info-item\">\n      <div class=\"loan-info-key\">Bank</div>\n      <div class=\"loan-info-value\">${bank.name}</div>\n    </li>\n    <li class=\"loan-info-item\">\n      <div class=\"loan-info-key\">Mortgage size, $</div>\n      <div class=\"loan-info-value\">${bank.maxLoan}</div>\n    </li>\n    <li class=\"loan-info-item\">\n      <div class=\"loan-info-key\">Minimum down payment, $</div>\n      <div class=\"loan-info-value\">${bank.minPayment}</div>\n    </li>\n    <li class=\"loan-info-item\">\n      <div class=\"loan-info-key\">Loan period, month</div>\n      <div class=\"loan-info-value\">${bank.loanTerm}</div>\n    </li>\n        <li class=\"loan-info-item\">\n      <div class=\"loan-info-key\">Invest rate, %</div>\n      <div class=\"loan-info-value\">${bank.interestRate}</div>\n        </li>\n    </ul>\n`;\n  loanInfoContainer.innerHTML = bankInfoItem;\n}\n\nlistOfBank.addEventListener('click', e => {\n  if (e.target.nodeName === `UL`) {\n    return;\n  }\n  const itemBank = e.target.closest('.bank-item');\n  const itemId = itemBank.dataset.id;\n  const currentBank = banks.find(bank => bank.id === itemId);\n\n  if (e.target.closest('.remove-bank-btn')) {\n    deleteBankItem(itemId);\n    if (itemBank.classList.contains('bank-item-active')) {\n      clearBankInfo();\n    }\n\n    renderList();\n    if (banks.length < 3) {\n      cleanButton.remove();\n    }\n\n    return;\n  }\n\n  renderInfoMarkUp(currentBank);\n\n  onClearActives();\n  itemBank.classList.add('bank-item-active');\n\n  console.log('click end');\n});\n\nfunction onEditClick(ev) {\n  const currentBank = banks.find(\n    el => el.id === ev.target.parentNode.dataset.id\n  );\n  console.log(currentBank);\n}\n\nfunction deleteBankItem(id) {\n  console.log(`del`);\n  banks = banks.filter(elem => elem.id !== id);\n}\n\nfunction clearBankInfo() {\n  loanInfoContainer.innerHTML = '';\n}\n\naddButton.addEventListener('click', onAddButtonClick);\ncleanButton.addEventListener('click', onClearBankList);\n\nfunction onAddButtonClick() {\n  modalRef.innerHTML = renderModalMarkup();\n  const closeModalBtn = modalRef.querySelector('.close');\n  closeModalBtn.addEventListener('click', onCloseModal);\n  const formBackdrop = document.querySelector('.form-backdrop');\n  formBackdrop.addEventListener('submit', onFormSubmit);\n}\n\nfunction onCloseModal() {\n  modalRef.innerHTML = '';\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const formData = new FormData(e.target);\n\n  const bank = {};\n\n  formData.forEach((value, key) => {\n    bank[key] = value;\n  });\n\n  bank.id = crypto.randomUUID();\n\n  banks.push(bank);\n  if (banks.length > 2) {\n    banksContainer.append(cleanButton);\n  }\n  renderList();\n  onCloseModal();\n}\n\nfunction onClearBankList() {\n  listOfBank.innerHTML = '';\n  loanInfoContainer.innerHTML = '<p>Немає інформації про банки</p>';\n  banks = [];\n  cleanButton.remove();\n  console.log('onClearBankList');\n}\n\n// function toggleModal() {\n//   const modalElem = document.querySelector(\"[data-modal]\");\n//   modalElem.classList.toggle(\"is-hidden\");\n// }\n\n// const closeModalElem = document.querySelector(\"[data-modal-close]\");\n// const createBankBtn = document.querySelector(\".create-bank-btn\");\n\n// closeModalElem.addEventListener(\"click\", toggleModal);\n// createBankBtn.addEventListener(\"click\", toggleModal);\n"],"names":["banks","root","document","getElementById","banksContainer","createElement","loanInfoContainer","modalRef","classList","add","append","addButton","listOfBank","textContent","cleanButton","renderList","itemOfBank","map","bank","index","concat","id","name","join","innerHTML","querySelectorAll","forEach","e","addEventListener","onEditClick","renderModalMarkup","length","bankNames","onClearActives","remove","renderInfoMarkUp","bankInfoItem","maxLoan","minPayment","loanTerm","interestRate","ev","currentBank","find","el","target","parentNode","dataset","console","log","deleteBankItem","filter","elem","clearBankInfo","onAddButtonClick","querySelector","onCloseModal","onFormSubmit","preventDefault","formData","FormData","value","key","crypto","randomUUID","push","onClearBankList","nodeName","itemBank","closest","itemId","contains"],"version":3,"file":"index.68bcfb70.js.map"}